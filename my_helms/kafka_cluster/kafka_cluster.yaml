apiVersion: v1
kind: Namespace
metadata:
  name: default

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-kafka-broker-1
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/kafka/broker-1

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-kafka-broker-2
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/kafka/broker-2

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-kafka-broker-3
spec:
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/kafka/broker-3

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-kafka-broker-1
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-kafka-broker-2
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-kafka-broker-3
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-1
  template:
    metadata:
      labels:
        app: kafka-broker-1
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 19092
              name: kafka
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-broker-1:9092,LISTENER_LOCAL://localhost:19092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_COMPRESSION_TYPE
              value: "producer"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: pvc-kafka-broker-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-2
  template:
    metadata:
      labels:
        app: kafka-broker-2
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 29092
              name: kafka
          env:
            - name: KAFKA_BROKER_ID
              value: "2"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_COMPRESSION_TYPE
              value: "producer"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: pvc-kafka-broker-2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker-3
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker-3
  template:
    metadata:
      labels:
        app: kafka-broker-3
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:latest
          ports:
            - containerPort: 39092
              name: kafka
          env:
            - name: KAFKA_BROKER_ID
              value: "3"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-broker-3:9092,LISTENER_LOCAL://localhost:39092"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,LISTENER_LOCAL:PLAINTEXT"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_COMPRESSION_TYPE
              value: "producer"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: pvc-kafka-broker-3

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-1
  namespace: default
spec:
  ports:
    - port: 19092
      targetPort: 19092
      protocol: TCP
      name: kafka
  selector:
    app: kafka-broker-1

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-2
  namespace: default
spec:
  ports:
    - port: 29092
      targetPort: 29092
      protocol: TCP
      name: kafka
  selector:
    app: kafka-broker-2

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-3
  namespace: default
spec:
  ports:
    - port: 39092
      targetPort: 39092
      protocol: TCP
      name: kafka
  selector:
    app: kafka-broker-3

#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: schema-registry
#  namespace: default
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: schema-registry
#  template:
#    metadata:
#      labels:
#        app: schema-registry
#    spec:
#      containers:
#        - name: schema-registry
#          image: confluentinc/cp-schema-registry:latest
#          ports:
#            - containerPort: 8081
#              name: schema-registry
#          env:
#            - name: SCHEMA_REGISTRY_HOST_NAME
#              value: "schema-registry"
#            - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
#              value: "zookeeper:2181"
#            - name: SCHEMA_REGISTRY_LISTENERS
#              value: "http://schema-registry:8081"
#            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
#              value: "PLAINTEXT://kafka-broker-2:9092,LISTENER_LOCAL://localhost:29092"
#            - name: SCHEMA_REGISTRY_DEBUG
#              value: "true"
#
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: schema-registry
#  namespace: default
#spec:
#  ports:
#    - port: 8081
#      targetPort: 8081
#      protocol: TCP
#      name: schema-registry
#  selector:
#    app: schema-registry
